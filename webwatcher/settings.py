"""
Django settings for webwatcher project.

Generated by 'django-admin startproject' using Django 2.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""
import socket
HOSTNAME = socket.gethostname()

# Store passwords in a file rather than putting them in source control.
# Read from the file to get named passwords
def __load_passwd_file(filename):
    f = open(filename,'r')
    passwds = {}
    try:
        with open(filename,'r') as f:
            for line in f:
                line = line.strip()
                line = line.replace('\t',' ')
                if ' ' not in line: continue
                line = line.split(' ')
                if line[0] == '#': continue
                if line[0] != HOSTNAME: continue
                name, pw = line[1],line[2]
                passwds[name.strip()] = pw.strip()
    except IOError:
        raise ValueError('Password file not found: %s' % filename)
    return passwds
__passwds = __load_passwd_file('.djangopass')

def get_passwd(name, raise_when_missing=1):
    pw = __passwds.get(name,None)
    if not pw and raise_when_missing:
        raise ValueError('Password not found: "%s"' % name)
    return pw

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'y=r0fg=wd*ne!8y-^o1x-g87m&y**zdh#n50+8o=t8_=l0)##_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = HOSTNAME == "Juans-MacBook-Pro.local"
DEBUG = True

ALLOWED_HOSTS = [
    'localhost',
    '165.227.138.145',
    'crescente.com.ar',
    'www.crescente.com.ar',
    ]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'watcher.apps.WatcherConfig',
    'sslserver',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'webwatcher.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
             os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'webwatcher.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'OPTIONS': {
            'user': get_passwd('user'),
            'password': get_passwd('password'),
            'database': get_passwd('database'),
            'port': int(get_passwd('port')),
            'unix_socket': get_passwd('mysqlsock'),
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")

TELEGRAM_TOKEN = '522306030:AAEOJUQwL0N9EXJFRYPN9AoRcmxlr7rmHBg'